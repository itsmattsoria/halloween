---
import { Debug } from 'astro:components';
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import Image from '../components/CloudImage.astro';
import Video from '../components/CloudVideo.astro';
import MovieCard from '../components/MovieCard.astro';

export async function getStaticPaths() {
  const years = await getCollection('years');
  return years.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const images = entry.data.images;
const movies = entry.data.movies;
movies.sort((a, b) => (a.title > b.title) ? 1 : -1);
---
<BaseLayout title={'Halloween: ' + entry.data.title} url={entry.data.url}>
  <div class="container">
    <header class="mb-3xl">
      <div>
        <a href="/" class="text-highlight relative z-10">Back</a>
      </div>
      <h1 class="type-full inline-flex gap-x-[0.2em] -translate-x-[0.05em]" style="--scaler:12.3cqw;">
        <span class="uppercase text-highlight" transition:name="siteTitle">Halloween</span>
        <span class="font-display text-primary" transition:name={entry.data.title}>{entry.data.title}</span>
      </h1>
    </header>
    { images && (
      <section class="mb-2xl">
        <h2 class="font-display uppercase text-highlight text-4xl">Did</h2>
        <ul class="md:columns-2 gap-x-s lg:gap-x-m lg:columns-3">
          { images.map((image) => 
            <li class="grid-item w-full mb-s lg:mb-m">
              { image.url.includes('.mov') ? 
                <Video src={image.url} /> :
                <Image
                  url={image.url}
                  width={image.width}
                  height={image.height}
                  zoomable={true}
                />
              }
            </li>
          )}
        </ul>  
      </section>
      <template id="zoom-template">
        <figure class="fixed inset-0 flex h-screen w-full z-100">
          <div id="zoom-container" class="w-full mx-auto h-[calc(100%_-_100px)]"></div>
        </figure>
      </template>
    ) }
    { movies && (
      <section class="mb-2xl">
        <h2 class="font-display uppercase text-highlight text-4xl">Watched</h2>
        <ul class="grid gap-s lg:gap-m md:grid-cols-2 lg:grid-cols-3">
          { movies.map((movie) => 
            <MovieCard movie={movie} />
          )}
        </ul>  
      </section>
    ) }
    <div class="prose">
      <Content />
    </div>
  </div>
</BaseLayout>
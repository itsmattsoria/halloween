---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection, getEntry } from 'astro:content';
import MovieCard from '../components/MovieCard.astro';

const years = await getCollection('years');
const movies = [];
const firstYear = years[0].data.title;
const lastYear = years[years.length - 1].data.title;

years.map(async (year) => {
  const yearMovies = year.data.movies.map(async (movie) => {
    movies.push(movie);
  });
});
movies.sort((a, b) => (a.title > b.title) ? 1 : -1);
const options = [ 'title', 'year', 'rating' ];
---

<BaseLayout title="Halloween ðŸŽƒ">
	<main class="container pb-3xl">
    <header class="mb-3xl">
      <div>
        <a href="/" class="text-highlight relative z-10">Back</a>
        <h1 class="type-full inline-flex gap-x-[0.2em] -translate-x-[0.05em]" style="--scaler:9.8cqw;">
          <span class="uppercase text-highlight" transition:name="siteTitle">Halloween</span>
          <span class="font-display text-primary" transition:name="Movie Index">Movie Index</span>
        </h1>
      </div>
    </header>

		{ movies && (
      <section class="mb-2xl">
        <h2 class="font-display uppercase text-highlight text-4xl">All Movies Watched {firstYear}-{lastYear}</h2>
        <astro-sort-list id="sort-list" data-value-names={options}>
          <div class="flex gap-4 mb-4">
            <div class="text-lg">Sort by:</div>
            { options && options.map((option, index) => (
              index === 0 ? <button class="sort text-lg asc" data-sort={option}>{option}</button> : <button class="sort text-lg" data-sort={option} data-default-order="desc">{option}</button>
            ))}
          </div>
          <ul class="list grid gap-s lg:gap-m md:grid-cols-2 lg:grid-cols-3">
            { movies.map((movie) => 
              <MovieCard movie={movie} />
            )}
          </ul>
        </astro-sort-list>
      </section>
    ) }
	</main>
</BaseLayout>
<script>
  import List from 'list.js';

  class AstroSortList extends HTMLElement {
    constructor() {
      super();
      this.listOptions = {
        valueNames: this.dataset.valueNames.split(',')
      }

      this.init();
    }

    init() {
      this.sortList = new List(this, this.listOptions);
    }
  }

  customElements.define('astro-sort-list', AstroSortList);
</script>
<style>
  .sort {
    &.asc, &.desc {
      color: theme('colors.highlight');
      text-decoration: underline;
    }
    &.asc:after {
      content: ' â–²';
      font-size: 0.65em;
    }
    &.desc:after {
      content: ' â–¼';
      font-size: 0.65em;
    }
  }
</style>
---
export const prerender = false;
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection, getEntry } from 'astro:content';
import MovieCard from '../components/MovieCard.astro';

let years = await getCollection('years');
let topRatedMovies = [];

years.map((year) => {
  const yearMovies = year.data.movies.map((movie) => {
    if (movie.rating === 'ðŸ”ªðŸ”ªðŸ”ªðŸ”ª') {
      let movieCopy = Object.assign({}, movie);
      const existingMovieIndex = topRatedMovies.findIndex((m) => m.title === movieCopy.title);
      if (year.data.title !== 'All Time') {
        movieCopy.watched = year.data.title;
      }
  
      if (existingMovieIndex === -1) {
        topRatedMovies.push(movieCopy);
      } else {
        const existingMovie = topRatedMovies[existingMovieIndex];
        if (existingMovie.year !== movieCopy.year) {
          topRatedMovies.push(movieCopy);
        }
      }
    }
  });
});

const shuffledMovies = topRatedMovies.sort(() => 0.5 - Math.random());
const topTenMovies = shuffledMovies.slice(0, 10);
years = years.filter((year) => year.data.title !== 'All Time');
---

<BaseLayout title="Halloween ðŸŽƒ">
	<main class="container pb-3xl">
		<h1 class="type-full uppercase text-highlight -translate-x-[0.05em]" style="--scaler:15.9cqw;" transition:name="siteTitle">Halloween</h1>

		<ol class="flex flex-wrap gap-6 justify-between ">
			{years.reverse().map((year) => <li><a href={year.slug} class="text-4xl transition-colors font-display hover:text-highlight focus-visible:text-highlight" transition:name={year.data.title}>{year.data.title}</a></li>)}
		</ol>

		<h2 class="text-4xl text-highlight mt-2xl leading-none mb-xl">All Time Favorites</h2>

		<div class="grid gap-xl lg:grid-cols-2">
			<section class="flex flex-col">
				<h3 class="text-4xl font-display uppercase text-highlight">Music</h3>
				<iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/2YRiadmpeea27oT4GeXRZx?utm_source=generator&theme=0" width="100%" height="auto" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy" class="min-h-[500px] grow"></iframe>
			</section>
			
			{ topRatedMovies && (
				<section>
					<div class="flex justify-between items-end gap-2 pb-s">
						<h3 class="text-4xl font-display uppercase text-highlight leading-none">Movies</h3>
						<a href="/movie-index" class="text-lg leading-none underline underline-offset-4 hover:text-highlight focus-visible:text-highlight">Movie Index</a>
					</div>

					<ul class="grid gap-s md:grid-cols-2">
						{topTenMovies.map((movie) => <MovieCard movie={movie} />)}
					</ul>
				</section>
			)}
		</div>
	</main>
</BaseLayout>
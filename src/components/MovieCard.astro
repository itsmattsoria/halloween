---
import Image from '../components/CloudImage.astro';
import SpookyLink from '../components/SpookyLink.astro';

interface Props {
	movie: object;
}

const { movie } = Astro.props;
const linkAttrs = {
  'data-card': '',
  'aria-hidden': 'true',
  rel: 'noopener noreferrer',
};

const ratingMap = {
  1: 'ðŸ”ª',
  2: 'ðŸ”ªðŸ”ª',
  3: 'ðŸ”ªðŸ”ªðŸ”ª',
  4: 'ðŸ”ªðŸ”ªðŸ”ªðŸ”ª',
  5: 'ðŸ”ªðŸ”ªðŸ”ªðŸ”ªðŸ”ª',
};
---

<li class="movie-card @container relative rounded bg-highlight text-secondary p-xs" data-card>
  <div class="flex flex-col h-full @[400px]:grid @[400px]:grid-cols-2 gap-s lg:@[400px]:h-full">
    { movie.movieImage && (
      <Image
        url={movie.movieImage[0].url}
        width="600"
        height="600"
        zoomable={false}
        effects='e_grayscale/e_brightness:15/e_contrast:level_-30/e_tint:100:140C10:E2703A/'
        containerClasses="poster aspect-square"
        imgClasses="object-cover h-full"
        focalPoint={movie.movieImage[0].focalPoint}
      />
    )}
    <div class="text-container grow flex flex-col justify-between gap-6">
      <div class="text-content grow">
        <h2 class="text-lg leading-[1.1] text-balance">
          <span class="sr-only title">{ movie.title }</span>
          <SpookyLink href={ movie.externalLink } text={ movie.title } attributes={ linkAttrs } />
        </h2>
        <div class="text-sm year">{ movie.year }</div>
      </div>
      <div class="text-meta">
        <div class="text-base rating mb-[1rem]">{ ratingMap[movie.rating] }</div>
      { movie.yearsWatched.length > 0 && (
        <div class="absolute bottom-xs w-full watched-in text-xs italic tracking-tight leading-none opacity-75">
          <span>watched in </span>
          { movie.yearsWatched.map((year, index) => (<span>{ index !== movie.yearsWatched.length && index !== 0 && <span>, </span> }{ year.status === 'live' && <a href={'/year/' + year.slug } class="underline-offset-2 underline hover:no-underline focus-visible:no-underline">{year.title}</a> }{ year.status === 'disabled' && <span>{year.title}</span>}</span>))}
        </div>
      )}
      </div>
    </div>
  </div>

  { movie.notes && (
    <button popovertarget={ movie.slug } popovertargetaction="show" class="absolute bottom-xs right-xs">notes</button>
  )}
</li>

<style>
  .movie-card.list-view {
    border-radius: 0;
    container-type: inline-size;

    > div {
      display: flex;
      flex-direction: row;
      gap: theme('spacing.s');
    }

    .text-container {
      width: 100%;
      max-width: 65ch;
      gap: theme('spacing.2xs');

      > div:not(.watched-in) {
        display: flex;
        flex-direction: column;
        gap: theme('spacing.2xs');

        &.text-meta {
          display: grid;
          gap: theme('spacing.2xs');
        }

        .rating {
          margin-bottom: 0;
        }
        
        @container (min-width: 700px) {
          flex: 1 1 auto;
          flex-direction: row;
          gap: theme('spacing.xs');

          &.text-content {
            align-items: baseline;
          }

          &.text-meta {
            align-items: end;
          }

          h2 {
            flex: 0 1 80%;
            font-size: theme('fontSize.lg');
          }

          .year,
          .rating {
            flex: 1 0 5em;
            text-align: right;
            white-space: nowrap;
          }
        }
      }

      .watched-in {

        @container (max-width: 699px) {
          position: static;
        }
      }
    }
  }
</style>